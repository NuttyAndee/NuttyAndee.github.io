import { Inject, Injectable, Optional } from '@angular/core';
import { Md5 } from 'ts-md5/dist/md5';
import { GRAVATAR_CONFIG_TOKEN } from './gravatar-config.token';
import { DEFAULT_CONFIG } from './ngx-gravatar.constants';
import * as i0 from "@angular/core";
import * as i1 from "./gravatar-config.token";
export class NgxGravatarService {
    constructor(gravatarConfig) {
        this.gravatarConfig = gravatarConfig;
        this.defaultConfig = Object.assign({}, DEFAULT_CONFIG);
        if (this.gravatarConfig) {
            this.defaultConfig = Object.assign(Object.assign({}, this.defaultConfig), this.gravatarConfig);
        }
    }
    /**
     * Return defaultConfig object
     */
    getDefaultConfig() {
        return this.defaultConfig;
    }
    /**
     * Generate gravatar url
     *
     * @param email is a string. If email is not a string, email will be set to empty string "" by default
     * @param md5Hash is a string. If value is given it will take precedence over email.
     * @param size number
     * @param rating string
     * @param fallback string
     * @return gravatar url
     */
    generateGravatarUrl(email, md5Hash, size = this.defaultConfig.size, rating = this.defaultConfig.rating, fallback = this.defaultConfig.fallback) {
        let emailHash;
        if (md5Hash) {
            emailHash = md5Hash;
        }
        else {
            try {
                email = email.trim().toLowerCase();
            }
            catch (e) {
                console.error(`[ngx-gravatar] - Email (${email}) is not a string. Empty string is used as a default email.`);
                email = '';
            }
            emailHash = Md5.hashStr(email);
        }
        return `https://www.gravatar.com/avatar/${emailHash}?s=${size}&r=${rating}&d=${fallback}`;
    }
}
NgxGravatarService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgxGravatarService_Factory() { return new NgxGravatarService(i0.ɵɵinject(i1.GRAVATAR_CONFIG_TOKEN, 8)); }, token: NgxGravatarService, providedIn: "root" });
NgxGravatarService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
NgxGravatarService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [GRAVATAR_CONFIG_TOKEN,] }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWdyYXZhdGFyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZ3JhdmF0YXIvc3JjL2xpYi9uZ3gtZ3JhdmF0YXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBa0IsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdFLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV0QyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7OztBQUsxRCxNQUFNLE9BQU8sa0JBQWtCO0lBRzdCLFlBR1UsY0FBOEI7UUFBOUIsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBRXRDLElBQUksQ0FBQyxhQUFhLHFCQUFRLGNBQWMsQ0FBRSxDQUFDO1FBRTNDLElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUN2QixJQUFJLENBQUMsYUFBYSxtQ0FBUSxJQUFJLENBQUMsYUFBYSxHQUFLLElBQUksQ0FBQyxjQUFjLENBQUUsQ0FBQztTQUN4RTtJQUNILENBQUM7SUFFRDs7T0FFRztJQUNILGdCQUFnQjtRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM1QixDQUFDO0lBRUQ7Ozs7Ozs7OztPQVNHO0lBQ0gsbUJBQW1CLENBQ2pCLEtBQWEsRUFDYixPQUFnQixFQUNoQixPQUFlLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUN0QyxTQUFpQixJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFDMUMsV0FBbUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRO1FBRTlDLElBQUksU0FBOEIsQ0FBQztRQUNuQyxJQUFJLE9BQU8sRUFBRTtZQUNYLFNBQVMsR0FBRyxPQUFPLENBQUM7U0FDckI7YUFBTTtZQUNMLElBQUk7Z0JBQ0YsS0FBSyxHQUFHLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQzthQUNwQztZQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNWLE9BQU8sQ0FBQyxLQUFLLENBQ1gsMkJBQTJCLEtBQUssNkRBQTZELENBQzlGLENBQUM7Z0JBQ0YsS0FBSyxHQUFHLEVBQUUsQ0FBQzthQUNaO1lBQ0QsU0FBUyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDaEM7UUFDRCxPQUFPLG1DQUFtQyxTQUFTLE1BQU0sSUFBSSxNQUFNLE1BQU0sTUFBTSxRQUFRLEVBQUUsQ0FBQztJQUM1RixDQUFDOzs7O1lBekRGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7OzRDQUtJLFFBQVEsWUFDUixNQUFNLFNBQUMscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlLCBJbmplY3Rpb25Ub2tlbiwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1kNSB9IGZyb20gJ3RzLW1kNS9kaXN0L21kNSc7XG5pbXBvcnQgeyBHcmF2YXRhckNvbmZpZyB9IGZyb20gJy4vZ3JhdmF0YXItY29uZmlnJztcbmltcG9ydCB7IEdSQVZBVEFSX0NPTkZJR19UT0tFTiB9IGZyb20gJy4vZ3JhdmF0YXItY29uZmlnLnRva2VuJztcbmltcG9ydCB7IERFRkFVTFRfQ09ORklHIH0gZnJvbSAnLi9uZ3gtZ3JhdmF0YXIuY29uc3RhbnRzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIE5neEdyYXZhdGFyU2VydmljZSB7XG4gIHByaXZhdGUgZGVmYXVsdENvbmZpZzogR3JhdmF0YXJDb25maWc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQE9wdGlvbmFsKClcbiAgICBASW5qZWN0KEdSQVZBVEFSX0NPTkZJR19UT0tFTilcbiAgICBwcml2YXRlIGdyYXZhdGFyQ29uZmlnOiBHcmF2YXRhckNvbmZpZ1xuICApIHtcbiAgICB0aGlzLmRlZmF1bHRDb25maWcgPSB7IC4uLkRFRkFVTFRfQ09ORklHIH07XG5cbiAgICBpZiAodGhpcy5ncmF2YXRhckNvbmZpZykge1xuICAgICAgdGhpcy5kZWZhdWx0Q29uZmlnID0geyAuLi50aGlzLmRlZmF1bHRDb25maWcsIC4uLnRoaXMuZ3JhdmF0YXJDb25maWcgfTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGRlZmF1bHRDb25maWcgb2JqZWN0XG4gICAqL1xuICBnZXREZWZhdWx0Q29uZmlnKCkge1xuICAgIHJldHVybiB0aGlzLmRlZmF1bHRDb25maWc7XG4gIH1cblxuICAvKipcbiAgICogR2VuZXJhdGUgZ3JhdmF0YXIgdXJsXG4gICAqXG4gICAqIEBwYXJhbSBlbWFpbCBpcyBhIHN0cmluZy4gSWYgZW1haWwgaXMgbm90IGEgc3RyaW5nLCBlbWFpbCB3aWxsIGJlIHNldCB0byBlbXB0eSBzdHJpbmcgXCJcIiBieSBkZWZhdWx0XG4gICAqIEBwYXJhbSBtZDVIYXNoIGlzIGEgc3RyaW5nLiBJZiB2YWx1ZSBpcyBnaXZlbiBpdCB3aWxsIHRha2UgcHJlY2VkZW5jZSBvdmVyIGVtYWlsLlxuICAgKiBAcGFyYW0gc2l6ZSBudW1iZXJcbiAgICogQHBhcmFtIHJhdGluZyBzdHJpbmdcbiAgICogQHBhcmFtIGZhbGxiYWNrIHN0cmluZ1xuICAgKiBAcmV0dXJuIGdyYXZhdGFyIHVybFxuICAgKi9cbiAgZ2VuZXJhdGVHcmF2YXRhclVybChcbiAgICBlbWFpbDogc3RyaW5nLFxuICAgIG1kNUhhc2g/OiBzdHJpbmcsXG4gICAgc2l6ZTogbnVtYmVyID0gdGhpcy5kZWZhdWx0Q29uZmlnLnNpemUsXG4gICAgcmF0aW5nOiBzdHJpbmcgPSB0aGlzLmRlZmF1bHRDb25maWcucmF0aW5nLFxuICAgIGZhbGxiYWNrOiBzdHJpbmcgPSB0aGlzLmRlZmF1bHRDb25maWcuZmFsbGJhY2tcbiAgKSB7XG4gICAgbGV0IGVtYWlsSGFzaDogc3RyaW5nIHwgSW50MzJBcnJheTtcbiAgICBpZiAobWQ1SGFzaCkge1xuICAgICAgZW1haWxIYXNoID0gbWQ1SGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZW1haWwgPSBlbWFpbC50cmltKCkudG9Mb3dlckNhc2UoKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICBgW25neC1ncmF2YXRhcl0gLSBFbWFpbCAoJHtlbWFpbH0pIGlzIG5vdCBhIHN0cmluZy4gRW1wdHkgc3RyaW5nIGlzIHVzZWQgYXMgYSBkZWZhdWx0IGVtYWlsLmBcbiAgICAgICAgKTtcbiAgICAgICAgZW1haWwgPSAnJztcbiAgICAgIH1cbiAgICAgIGVtYWlsSGFzaCA9IE1kNS5oYXNoU3RyKGVtYWlsKTtcbiAgICB9XG4gICAgcmV0dXJuIGBodHRwczovL3d3dy5ncmF2YXRhci5jb20vYXZhdGFyLyR7ZW1haWxIYXNofT9zPSR7c2l6ZX0mcj0ke3JhdGluZ30mZD0ke2ZhbGxiYWNrfWA7XG4gIH1cbn1cbiJdfQ==