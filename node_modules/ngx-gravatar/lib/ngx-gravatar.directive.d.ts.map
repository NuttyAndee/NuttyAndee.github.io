{"version":3,"file":"ngx-gravatar.directive.d.ts","sources":["ngx-gravatar.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnChanges, OnInit, Renderer2 } from '@angular/core';\nimport { NgxGravatarService } from './ngx-gravatar.service';\nimport { GravatarConfig } from './gravatar-config';\nexport declare class NgxGravatarDirective implements OnChanges, OnInit {\n    private elementRef;\n    private renderer;\n    private gravatarService;\n    src: string;\n    email: string;\n    md5Hash: string;\n    size: number;\n    fallback: string;\n    rating: string;\n    round: boolean;\n    cornerRadius: number;\n    borderColor: string;\n    borderWidth: number;\n    style: any;\n    preferGravatar: boolean;\n    backgroundColor: boolean;\n    ratio: number;\n    initialized: boolean;\n    defaultConfig: GravatarConfig;\n    requestedSize: number;\n    isGravatarUsed: boolean;\n    constructor(elementRef: ElementRef, renderer: Renderer2, gravatarService: NgxGravatarService);\n    ngOnInit(): void;\n    ngOnChanges(): void;\n    /**\n     * Set default values for user inputs if they are not provided\n     */\n    private setDefaultValues;\n    /**\n     * Initialize avatar.\n     * Custom source has higher priority if preferGravatar is not set on.\n     * Finally, set styles for the avatar.\n     */\n    private initializeAvatar;\n    /**\n     * Compute the size of the avatar\n     *\n     * @return size\n     */\n    private computeSize;\n    /**\n     * Compute style object\n     *\n     * @return style object\n     */\n    private avatarStyle;\n    /**\n     * Set style for the avatar\n     *\n     * @param styles style object\n     */\n    private setStyle;\n}\n"]}